%Моделирование функций принадлежности и дигностики болезней
%с использованием параметров функций GLCM 2метрики в виде коэффициента
%ковариации параметров эталонного оисания и модельных параметров
%Вычисляется процент правильных результатов диагностики
%при многократном повторении диагностики исходные значения модельных параметров
%задаются с различными случайными отклонениями от эталонных значений


clc;
clear;

m=1;%количество статистических испытаний. 
k=8;   %номер заболевания на входе
contr=8;  %контрольная точка для настройки программы
kb_in=2^k;%входной код заболевания (нужен для определения правильности диагностики)
S=0.06;   %СКО случайных отклонений от эталонных значений
BT=0.005; %коэффициент для порога бинаризации
x = 0:14; %номера возможных болезней
nd = 8;

%Подлинные результаты измерений параметров Contrast, Correlation,
%Energy,Homogenity для компонент R,G,B,RG,RB,GB (Считаем их эталонными описаниями для 15
%болезней). Вместо этого массива данных нужно
%использовать массив значений, усредненных по обучающей выборке

%Эталонные описания Non_learning
% Rcon= [0.0073908 0.0041667 0.0066094 0.0030937 0.0055538 0.0053612 0.0043307 0.0050768];
% Rcor= [0.8762784 0.9607295 0.9517581 0.9776575 0.9377073 0.9600348 0.9731822 0.9405246];
% Ren= [0.1949197 0.2793556 0.1194212 0.2161387 0.2503376 0.1767675 0.2085516 0.1858729];
% Rhom= [0.8412216 0.9074330 0.8520821 0.9404366 0.8945521 0.8831406 0.9138181 0.8822792];
% Rentr= [0.8851938 0.8072305 1.0567706 0.8374827 0.8242751 0.9732288 0.8668608 0.8977274];
% Ridm= [0.8391638 0.9065638 0.8508278 0.9398668 0.8929984 0.8820883 0.9123828 0.8816232];
% Gcon= [0.0074636 0.0043150 0.0056816 0.0031779 0.0057482 0.0053286 0.0044073 0.0046848];
% Gcor= [0.8908196 0.9743209 0.9426384 0.9687924 0.9291606 0.9667882 0.9697381 0.9367341];
% Gen= [0.1786439 0.2427728 0.1555998 0.2777848 0.2214055 0.1719438 0.2071972 0.1987665];
% Ghom= [0.8380059 0.9062348 0.8696796 0.9400201 0.8901868 0.8846005 0.9123965 0.8889875];
% Gentr= [0.9225639 0.8750473 0.9543837 0.7524117 0.8398265 0.9811895 0.8604871 0.8821371];
% Gidm= [0.8360251 0.9051578 0.8689431 0.9393628 0.8884393 0.8835145 0.9109666 0.8886162];
% Bcon= [0.0070139 0.0035577 0.0060047 0.0026874 0.0054451 0.0051673 0.0040496 0.0044247];
% Bcor= [0.8600210 0.9574029 0.9298701 0.9528625 0.9028449 0.9560783 0.9601887 0.9294270];
% Ben= [0.2106831 0.3160180 0.1652236 0.3183802 0.2540917 0.1942470 0.2222578 0.2220879];
% Bhom= [0.8429864 0.9186524 0.8629512 0.9437880 0.8914362 0.8864434 0.9137759 0.8946921];
% Bentr= [0.8494841 0.7511138 0.9471297 0.6719269 0.7714296 0.9248358 0.8253293 0.8175222];
% Bidm= [0.8416029 0.9181107 0.8620576 0.9433731 0.8901251 0.8854950 0.9126190 0.8943863];
% RGcon= [0.0025671 0.0002267 0.0000000 0.0003386 0.0011620 0.0000004 0.0001614 0.0014399];
% RGcor= [0.9101960 1.0000000 1.0000000 1.0000000 0.9361632 1.0000000 1.0000000 0.8718494];
% RGen= [0.4490582 0.9402720 1.0000000 0.8088307 0.5429480 0.9999597 0.9169216 0.5773559];
% RGhom= [0.9386627 0.9944464 1.0000000 0.9917046 0.9716285 0.9999899 0.9960453 0.9647365];
% RGentr= [0.4987300 0.0622944 0.0000000 0.1606947 0.3668310 0.0000892 0.0676289 0.3406107];
% RGidm= [0.9385071 0.9944464 1.0000000 0.9917046 0.9716187 0.9999899 0.9960453 0.9647351];
% RBcon= [0.0045287 0.0011455 0.0022811 0.0018697 0.0022994 0.0012994 0.0015581 0.0037173];
% RBcor= [0.9250456 0.9237137 0.9074821 0.9750350 0.9466217 0.9268507 0.9611629 0.9393038];
% RBen= [0.2130222 0.5711092 0.4537834 0.2713061 0.3629425 0.5417438 0.3517602 0.2413595];
% RBhom= [0.8913333 0.9719631 0.9441902 0.9563994 0.9466166 0.9681645 0.9622506 0.9113603];
% RBentr= [0.7975204 0.3749474 0.4775172 0.7164402 0.5997517 0.3764893 0.5778876 0.7689575];
% RBidm= [0.8911047 0.9719605 0.9441827 0.9562804 0.9464430 0.9681645 0.9622081 0.9111169];
% GBcon= [0.0029861 0.0011473 0.0027505 0.0016668 0.0021273 0.0012961 0.0017025 0.0022966];
% GBcor= [0.8467101 0.9638841 0.8919837 0.9625733 0.9171005 0.9425360 0.9414170 0.9201114];
% GBen= [0.4467394 0.4708529 0.4079553 0.3511789 0.4068640 0.4965808 0.4310786 0.3812421];
% GBhom= [0.9273237 0.9719537 0.9328361 0.9603339 0.9484502 0.9682466 0.9588121 0.9438093];
% GBentr= [0.4715109 0.4497045 0.5306216 0.5917739 0.5308156 0.4276521 0.4889861 0.5535358];
% GBidm= [0.9272754 0.9719473 0.9328138 0.9602379 0.9483962 0.9682466 0.9587596 0.9438017];

% Imadjust_learning
Rcon= [0.0149581 0.0064197 0.0126823 0.0037463 0.0052555 0.0092422 0.0059886 0.0057279];
Rcor= [0.9037775 0.9740510 0.9630990 0.9737136 0.9431752 0.9700050 0.9740625 0.9548563];
Ren= [0.0926338 0.4032541 0.0946707 0.3315928 0.4834293 0.1462160 0.3997217 0.4326217];
Rhom= [0.7642224 0.9021518 0.7923675 0.9386716 0.9229526 0.8456857 0.9191573 0.8999844];
Rentr= [1.1948561 0.7514642 1.2745220 0.7635435 0.6206019 1.1106266 0.7311560 0.7038495];
Ridm= [0.7546327 0.8982418 0.7845394 0.9376864 0.9206880 0.8410357 0.9156271 0.8967980];
Gcon= [0.0174231 0.0063167 0.0089217 0.0042497 0.0108438 0.0086821 0.0064269 0.0075260];
Gcor= [0.9127069 0.9812764 0.9570815 0.9707724 0.9407273 0.9746311 0.9718733 0.9549711];
Gen= [0.0720674 0.3930231 0.1661176 0.4279709 0.2715537 0.1579499 0.3309926 0.2185971];
Ghom= [0.7387364 0.9083072 0.8376202 0.9411925 0.8577944 0.8537956 0.9123523 0.8578985];
Gentr= [1.3084450 0.7706574 1.0546081 0.6375335 0.9145182 1.0830495 0.7829701 0.9714026];
Gidm= [0.7265279 0.9041863 0.8332454 0.9396549 0.8518409 0.8495754 0.9086420 0.8542848];
Bcon= [0.0139158 0.0057764 0.0119364 0.0045817 0.0102089 0.0084150 0.0082781 0.0063594];
Bcor= [0.8907720 0.9649761 0.9474813 0.9638771 0.9277234 0.9654098 0.9671245 0.9438086];
Ben= [0.1072465 0.1826441 0.0910715 0.2099190 0.1484882 0.2096448 0.1091952 0.2197106];
Bhom= [0.7688329 0.8851395 0.7911103 0.9129196 0.8360868 0.8556994 0.8607786 0.8679767];
Bentr= [1.1374930 0.9534122 1.2290200 0.8825949 1.0376001 1.0141101 1.1233735 0.9077851];
Bidm= [0.7602369 0.8829827 0.7845725 0.9118549 0.8311667 0.8515640 0.8564779 0.8658266];
RGcon= [0.0069164 0.0007635 0.0000057 0.0006297 0.0043744 0.0000816 0.0003529 0.0033320];
RGcor= [0.9374715 0.9250706 1.0000000 0.9337104 1.0000000 1.0000000 1.0000000 0.9051056];
RGen= [0.2911106 0.7102136 0.9989688 0.8728765 0.4518447 0.9884906 0.8698533 0.4285580];
RGhom= [0.8739214 0.9818944 0.9998608 0.9878780 0.9211055 0.9980018 0.9913808 0.9276238];
RGentr= [0.8127319 0.2476281 0.0018030 0.1468028 0.5747873 0.0139216 0.1166656 0.5598816];
RGidm= [0.8701761 0.9818373 0.9998608 0.9875882 0.9187282 0.9980018 0.9913781 0.9267844];
RBcon= [0.0108158 0.0033269 0.0051800 0.0042861 0.0078367 0.0032287 0.0047556 0.0084139];
RBcor= [0.9428385 0.9427556 0.9293891 0.9738874 0.9418885 0.9313984 0.9581265 0.9481803];
RBen= [0.0848208 0.3349042 0.2371811 0.1533515 0.1416220 0.3135314 0.1711664 0.1158786];
RBhom= [0.7941941 0.9266552 0.8819312 0.9112264 0.8544551 0.9259478 0.9023052 0.8312588];
RBentr= [1.2046660 0.6977319 0.8194191 0.9796828 1.0274123 0.6772161 0.9246495 1.1020510];
RBidm= [0.7890124 0.9259226 0.8811013 0.9102778 0.8512199 0.9254600 0.9007656 0.8280246];
GBcon= [0.0053242 0.0036164 0.0063514 0.0038825 0.0050455 0.0035079 0.0044051 0.0061568];
GBcor= [0.8660479 0.9598802 0.9195636 0.9706208 0.9369033 0.9574942 0.9522062 0.9427319];
GBen= [0.2770841 0.2676533 0.1813764 0.2004421 0.1982905 0.2556119 0.2240826 0.1638176];
GBhom= [0.8800145 0.9165358 0.8601697 0.9182127 0.8921669 0.9198425 0.9094950 0.8666693];
GBentr= [0.7283388 0.7736412 0.9085888 0.8858319 0.8824921 0.7638307 0.8253191 0.9774182];
GBidm= [0.8790836 0.9160583 0.8586868 0.9174195 0.8910206 0.9192919 0.9080657 0.8650596];

result=0;
global_result=0;

for j1=1:m %цикл статистических испытаний
    noise=randn(1,24);    
    for j=1:nd %вычисление вектора-строки средних значений по столбцам матрицы эталонного описания      
        S1(j)=(Rcon(j)+Rcor(j)+Ren(j)+Rhom(j)+Gcon(j)+Gcor(j)+Gen(j)+Ghom(j)+Bcon(j)+Bcor(j)+Ben(j)+Bhom(j));
        S2(j)=(RGcon(j)+RGcor(j)+RGen(j)+RBhom(j)+RBcon(j)+RBcor(j)+RBen(j)+RBhom(j)+GBcon(j)+GBcor(j)+GBen(j)+GBhom(j));
        SJ(j)=(S1(j)+S2(j))/24;    
    end; 
    SJ_contr=SJ(contr);
    % Matrix non_test
%     XRcon= [0.0121563 0.0033758 0.0076122 0.0026722 0.0050799 0.0056947 0.0044339 0.0047040];
%     XRcor= [0.8205782 0.9637404 0.9531290 0.9729624 0.9450056 0.9481764 0.9750200 0.9444110];
%     XRen= [0.1497182 0.2783436 0.1479572 0.2250308 0.2637602 0.1543224 0.1908898 0.2374864];
%     XRhom= [0.7868682 0.9220698 0.8517488 0.9417696 0.8853356 0.8703136 0.9048136 0.8970336];
%     XRentr= [0.9966920 0.7763868 1.0450008 0.8112758 0.8229440 0.9791590 0.9305754 0.8165420];
%     XRidm= [0.7802392 0.9216450 0.8485962 0.9414716 0.8845906 0.8693710 0.9038396 0.8963564];
%     XGcon= [0.0122176 0.0035297 0.0062428 0.0027358 0.0052485 0.0055258 0.0045606 0.0044215];
%     XGcor= [0.8296140 0.9680150 0.9519270 0.9563154 0.9245710 0.9580532 0.9713738 0.9375710];
%     XGen= [0.1355226 0.2525692 0.1965186 0.3011022 0.2135218 0.1582968 0.1996338 0.2266852];
%     XGhom= [0.7802812 0.9190382 0.8700864 0.9430296 0.8821838 0.8754922 0.9016586 0.8991872];
%     XGentr= [1.0264372 0.8293820 0.9363506 0.6956616 0.8431560 0.9889212 0.9234610 0.8258556];
%     XGidm= [0.7737660 0.9185542 0.8680802 0.9426984 0.8813178 0.8744590 0.9007134 0.8988172];
%     XBcon= [0.0109144 0.0029130 0.0068970 0.0022044 0.0052700 0.0053852 0.0043286 0.0046218];
%     XBcor= [0.7972296 0.9511044 0.9352762 0.9400488 0.9004050 0.9389182 0.9671096 0.9410382];
%     XBen= [0.1736516 0.3230656 0.1848233 0.3845506 0.2195102 0.1823372 0.2074538 0.2057010];
%     XBhom= [0.7916400 0.9311046 0.8602488 0.9508848 0.8769914 0.8771334 0.9033486 0.8928696];
%     XBentr= [0.9262930 0.6878254 0.9505614 0.5935836 0.8231536 0.9143430 0.8836636 0.8613440];
%     XBidm= [0.7866252 0.9308618 0.8577364 0.9505956 0.8764178 0.8762696 0.9025646 0.8923574];
%     XRGcon= [0.0034054 0.0002387 0.0000000 0.0002174 0.0011560 0.0000027 0.0000164 0.0009727];
%     XRGcor= [0.8509840 1.0000000 1.0000000 1.0000000 0.9418840 1.0000000 1.0000000 0.8486566];
%     XRGen= [0.4496616 0.9108480 1.0000000 0.8769900 0.4776164 0.9994636 0.9973142 0.7133396];
%     XRGhom= [0.9187056 0.9941510 1.0000000 0.9946746 0.9716778 0.9999328 0.9995974 0.9761678];
%     XRGentr= [0.4992504 0.0885382 0.0000000 0.1087853 0.3879816 0.0010088 0.0041500 0.2370250];
%     XRGidm= [0.9184918 0.9941510 1.0000000 0.9946746 0.9716778 0.9999328 0.9995974 0.9761678];
%     XRBcon= [0.0063032 0.0013376 0.0025049 0.0017351 0.0026526 0.0010499 0.0012401 0.0028339];
%     XRBcor= [0.8933146 0.9497468 0.9056266 0.9693180 0.9385970 0.9332768 0.9519138 0.9435782];
%     XRBen= [0.1938398 0.4594690 0.4249346 0.3037960 0.3553482 0.5567802 0.5222482 0.3180824];
%     XRBhom= [0.8562552 0.9672462 0.9394720 0.9577404 0.9352930 0.9742784 0.9697070 0.9320164];
%     XRBentr= [0.8231888 0.4710948 0.5071422 0.6573132 0.6402170 0.3410434 0.4238962 0.6634082];
%     XRBidm= [0.8551866 0.9672444 0.9393880 0.9577154 0.9352678 0.9742784 0.9696980 0.9318982];
%     XGBcon= [0.0038208 0.0012643 0.0027940 0.0014168 0.0024321 0.0008452 0.0013267 0.0018476];
%     XGBcor= [0.7808160 0.9540026 0.8964138 0.9364828 0.8705392 0.9521882 0.9261552 0.9225192];
%     XGBen= [0.4297536 0.4493298 0.4219722 0.4998522 0.4772630 0.5265964 0.6154488 0.4617528];
%     XGBhom= [0.9063894 0.9690326 0.9328088 0.9660874 0.9406990 0.9793726 0.9675950 0.9550448];
%     XGBentr= [0.4680848 0.4713188 0.5338340 0.4733610 0.4856206 0.3529538 0.3561940 0.4916686];
%     XGBidm= [0.9063894 0.9690318 0.9326826 0.9660134 0.9406706 0.9793644 0.9675850 0.9550168];

    % Matrix imadjust_test
    XRcon= [0.0273921 0.0054336 0.0156265 0.0040086 0.0036296 0.0104757 0.0060337 0.0053509];
    XRcor= [0.8490702 0.9756510 0.9585794 0.9796310 0.9597006 0.9627944 0.9735932 0.9514228];
    XRen= [0.0603149 0.2761524 0.1064492 0.1740674 0.5843692 0.1129794 0.4122448 0.5710383];
    XRhom= [0.6900270 0.9010260 0.8006398 0.9186854 0.9349594 0.8186710 0.9062960 0.9194652];
    XRentr= [1.3587400 0.8736696 1.2402944 0.9443144 0.5238784 1.1918734 0.7564249 0.5672368];
    XRidm= [0.6692388 0.8985050 0.7901784 0.9180886 0.9335130 0.8128788 0.9030766 0.9162282];
    XGcon= [0.0310671 0.0055462 0.0103986 0.0038574 0.0077689 0.0101703 0.0059459 0.0052545];
    XGcor= [0.8488958 0.9786952 0.9595868 0.9631214 0.9339828 0.9684060 0.9675208 0.9440368];
    XGen= [0.0494816 0.2491874 0.1790837 0.2771548 0.3284084 0.1286696 0.4305240 0.3861174];
    XGhom= [0.6674462 0.8986338 0.8444072 0.9292744 0.8695984 0.8287806 0.9076670 0.9022092];
    XGentr= [1.4399600 0.9121900 1.0484878 0.7749418 0.8167656 1.1690706 0.7315372 0.7391804];
    XGidm= [0.6426256 0.8961218 0.8381054 0.9286858 0.8658046 0.8229552 0.9045286 0.9002378];
    XBcon= [0.0250073 0.0046739 0.0145433 0.0032339 0.0108748 0.0094337 0.0078318 0.0087717];
    XBcor= [0.8295098 0.9631702 0.9418594 0.9368308 0.9264832 0.9482754 0.9763478 0.9598124];
    XBen= [0.0707834 0.1894366 0.1457085 0.3638596 0.0928853 0.2035253 0.1216685 0.1311355];
    XBhom= [0.6929822 0.8982492 0.8050298 0.9312704 0.7934344 0.8366036 0.8554562 0.8344370];
    XBentr= [1.2808540 0.8957852 1.1503456 0.6981058 1.1740100 1.0426782 1.1273618 1.1223608];
    XBidm= [0.6737614 0.8971460 0.7952670 0.9308870 0.7883994 0.8314042 0.8520162 0.8304794];
    XRGcon= [0.0102316 0.0008692 0.0000259 0.0004394 0.0035268 0.0001545 0.0000294 0.0014010];
    XRGcor= [0.8881316 0.9479118 0.6262762 0.9175298 0.9153366 0.7584040 1.0000000 0.8888570];
    XRGen= [0.2694054 0.6429162 0.9960270 0.7952182 0.4818956 0.9705174 0.9933100 0.6232886];
    XRGhom= [0.8367598 0.9791430 0.9993656 0.9892706 0.9259362 0.9962150 0.9992784 0.9659520];
    XRGentr= [0.8487350 0.3072342 0.0065430 0.1823754 0.5332780 0.0387883 0.0102009 0.3305142];
    XRGidm= [0.8292788 0.9790992 0.9993656 0.9892670 0.9247322 0.9962150 0.9992784 0.9659242];
    XRBcon= [0.0167183 0.0030620 0.0060652 0.0036196 0.0090349 0.0026842 0.0040371 0.0085532];
    XRBcor= [0.9112880 0.9625690 0.9277328 0.9743946 0.9417440 0.9384788 0.9542666 0.9547452];
    XRBen= [0.0720264 0.2637520 0.2085354 0.1600498 0.0969249 0.2987734 0.2086502 0.1507487];
    XRBhom= [0.7443514 0.9304058 0.8743098 0.9158660 0.8177726 0.9359724 0.9112530 0.8384718];
    XRBentr= [1.2559860 0.7666870 0.8652422 0.9558200 1.1461700 0.6455610 0.8100810 1.0721610];
    XRBidm= [0.7325658 0.9299320 0.8723496 0.9155578 0.8142826 0.9358006 0.9103120 0.8345088];
    XGBcon= [0.0055649 0.0029952 0.0073993 0.0033111 0.0063608 0.0025269 0.0041979 0.0062169];
    XGBcor= [0.7977462 0.9650444 0.9234316 0.9607618 0.9087452 0.9543508 0.9512464 0.9411024];
    XGBen= [0.3000278 0.2765828 0.1784743 0.2228800 0.1959806 0.2917804 0.2120060 0.1863067];
    XGBhom= [0.8685760 0.9301182 0.8562594 0.9255028 0.8631576 0.9400972 0.9073054 0.8706486];
    XGBentr= [0.6541632 0.7512772 0.9347366 0.8161564 0.9045352 0.6650154 0.8117942 0.9475866];
    XGBidm= [0.8680908 0.9297908 0.8531352 0.9251984 0.8615428 0.9399026 0.9063636 0.8687130];

%     for j=1:nd %вычисление матрицы параметров, полученных при моделирования результатов измерений
%         XRcon(j)=Rcon(j)+S*noise(1);XRcor(j)=Rcor(j)+S*noise(2);XRen(j)=Ren(j)+S*noise(3);XRhom(j)=Rhom(j)+S*noise(4);
%         XGcon(j)=Gcon(j)+S*noise(5);XGcor(j)=Gcor(j)+S*noise(6);XGen(j)=Gen(j)+S*noise(7);XGhom(j)=Ghom(j)+S*noise(8); 
%         XBcon(j)=Bcon(j)+S*noise(9);XBcor(j)=Bcor(j)+S*noise(10);XBen(j)=Ben(j)+S*noise(11);XBhom(j)=Bhom(j)+S*noise(12); 
%         XRGcon(j)=RGcon(j)+S*noise(13);XRGcor(j)=RGcor(j)+S*noise(14);XRGen(j)=RGen(j)+S*noise(15);XRGhom(j)=RGhom(j)+S*noise(16);
%         XRBcon(j)=RBcon(j)+S*noise(17);XRBcor(j)=RBcor(j)+S*noise(18);XRBen(j)=RBen(j)+S*noise(19);XRBhom(j)=RBhom(j)+S*noise(20);
%         XGBcon(j)=GBcon(j)+S*noise(21);XGBcor(j)=GBcor(j)+S*noise(22);XGBen(j)=GBen(j)+S*noise(23);XGBhom(j)=GBhom(j)+S*noise(24);   
%     end  
    for j=1:nd %вычисление вектора-строки средних значений по столбцам матрицы результатов измерений      
        XS1(j)=(XRcon(j)+XRcor(j)+XRen(j)+XRhom(j)+XGcon(j)+XGcor(j)+XGen(j)+XGhom(j)+XBcon(j)+XBcor(j)+XBen(j)+XBhom(j));
        XS2(j)=(XRGcon(j)+XRGcor(j)+XRGen(j)+XRGhom(j)+XRBcon(j)+XRBcor(j)+XRBen(j)+XRBhom(j)+XGBcon(j)+XGBcor(j)+XGBen(j)+XGBhom(j));
        XSJ(j)=(XS1(j)+XS2(j))/24 ;  
    end; 
    SJ_contr=SJ(k);
    XSJ_k=XSJ(contr);
       for j=1:nd
          x_sko(j)=0;
          y_sko(j)=0;
       end    
    for j=1:nd %вектор-строка СКО по столбцам 
        x_sko1(j)= (Rcon(j)-SJ(j))*(Rcon(j)-SJ(j))+(Rcor(j)-SJ(j))*(Rcor(j)-SJ(j))+(Ren(j)-SJ(j))*(Ren(j)-SJ(j))+(Rhom(j)-SJ(j))*(Rhom(j)-SJ(j));
        x_sko2(j)= (Gcon(j)-SJ(j))*(Gcon(j)-SJ(j))+(Gcor(j)-SJ(j))*(Gcor(j)-SJ(j))+(Gen(j)-SJ(j))*(Gen(j)-SJ(j))+(Ghom(j)-SJ(j))*(Ghom(j)-SJ(j));
        x_sko3(j)= (Bcon(j)-SJ(j))*(Bcon(j)-SJ(j))+(Bcor(j)-SJ(j))*(Bcor(j)-SJ(j))+(Ben(j)-SJ(j))*(Ben(j)-SJ(j))+(Bhom(j)-SJ(j))*(Bhom(j)-SJ(j));
        x_sko4(j)= (RGcon(j)-SJ(j))*(RGcon(j)-SJ(j))+(RGcor(j)-SJ(j))*(RGcor(j)-SJ(j))+(RGen(j)-SJ(j))*(RGen(j)-SJ(j))+(RGhom(j)-SJ(j))*(RGhom(j)-SJ(j));
        x_sko5(j)= (RBcon(j)-SJ(j))*(RBcon(j)-SJ(j))+(RBcor(j)-SJ(j))*(RBcor(j)-SJ(j))+(RBen(j)-SJ(j))*(RBen(j)-SJ(j))+(RBhom(j)-SJ(j))*(RBhom(j)-SJ(j));   
        x_sko6(j)=(GBcon(j)-SJ(j))*(GBcon(j)-SJ(j))+(GBcor(j)-SJ(j))*(GBcor(j)-SJ(j))+(GBen(j)-SJ(j))*(GBen(j)-SJ(j))+(GBhom(j)-SJ(j))*(GBhom(j)-SJ(j));     
        x_sko(j)=x_sko1(j)+x_sko2(j)+x_sko3(j)+x_sko4(j)+x_sko5(j)+x_sko6(j);
        y_sko1(j)=(XRcon(j)-XSJ(j))*(XRcon(j)-XSJ(j))+(XRcor(j)-XSJ(j))*(XRcor(j)-XSJ(j))+(XRen(j)-XSJ(j))*(XRen(j)-XSJ(j))+(XRhom(j)-XSJ(j))*(XRhom(j)-XSJ(j));
        y_sko2(j)=(XGcon(j)-XSJ(j))*(XGcon(j)-XSJ(j))+(XGcor(j)-XSJ(j))*(XGcor(j)-XSJ(j))+(XGen(j)-XSJ(j))*(XGen(j)-XSJ(j))+(XGhom(j)-XSJ(j))*(XGhom(j)-XSJ(j));
        y_sko3(j)=(XBcon(j)-XSJ(j))*(XBcon(j)-XSJ(j))+(XBcor(j)-XSJ(j))*(XBcor(j)-XSJ(j))+(XBen(j)-XSJ(j))*(XBen(j)-XSJ(j))+(XBhom(j)-XSJ(j))*(XBhom(j)-XSJ(j));
        y_sko4(j)=(XRGcon(j)-XSJ(j))*(XRGcon(j)-XSJ(j))+(XRGcor(j)-XSJ(j))*(XRGcor(j)-XSJ(j))+(XRGen(j)-XSJ(j))*(XRGen(j)-XSJ(j))+(XRGhom(j)-XSJ(j))*(XRGhom(j)-XSJ(j));
        y_sko5(j)=(XRBcon(j)-XSJ(j))*(XRBcon(j)-XSJ(j))+(XRBcor(j)-XSJ(j))*(XRBcor(j)-XSJ(j))+(XRBen(j)-XSJ(j))*(XRBen(j)-XSJ(j))+(XRBhom(j)-XSJ(j))*(XRBhom(j)-XSJ(j));
        y_sko6(j)=(XGBcon(j)-XSJ(j))*(XGBcon(j)-XSJ(j))+(XGBcor(j)-XSJ(j))*(XGBcor(j)-XSJ(j))+(XGBen(j)-XSJ(j))*(XGBen(j)-XSJ(j))+(XGBhom(j)-XSJ(j))*(XGBhom(j)-XSJ(j));
        y_sko(j)= y_sko1(j)+y_sko2(j)+y_sko3(j)+y_sko4(j)+y_sko5(j)+y_sko6(j);
    end  
    x_sko_contr= x_sko(contr);
    y_sko_contr= y_sko(k);
    z_sko_contr=sqrt(x_sko(contr)*y_sko(k));%%%%%%%%%%!!!!!!!!
 
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %Вычисление вектора-столбца коэффициента ковариации выбранного вектора-столбца
    %результатов измерений  с вектором-столбцом матрицы эталонного описания
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    for j=1:nd
        Rcon_fp(j)=(Rcon(j)-SJ(j))*(XRcon(k)-XSJ(k));%функция принадлежности 1
        Rcor_fp(j)=(Rcor(j)-SJ(j))*(XRcor(k)-XSJ(k));%функция принадлежности 2
        Ren_fp(j)=(Ren(j)-SJ(j))*(XRen(k)-XSJ(k));%функция принадлежности 3
        Rhom_fp(j)=(Rhom(j)-SJ(j))*(XRhom(k)-XSJ(k));%функция принадлежности 4
        SumR(j)=Rcon_fp(j)+Rcor_fp(j)+Ren_fp(j)+Rhom_fp(j);%коэф. ковариации по R
    end 

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    for j=1:nd
        Gcon_fp(j)=(Gcon(j)-SJ(j))*(XGcon(k)-XSJ(k));%функция принадлежности 1
        Gcor_fp(j)=(Gcor(j)-SJ(j))*(XGcor(k)-XSJ(k));%функция принадлежности 2
        Gen_fp(j)=(Gen(j)-SJ(j))*(XGen(k)-XSJ(k));%функция принадлежности 3
        Ghom_fp(j)=(Ghom(j)-SJ(j))*(XGhom(k)-XSJ(k));%функция принадлежности 4
        SumG(j)=Gcon_fp(j)+Gcor_fp(j)+Gen_fp(j)+Ghom_fp(j);%коэф. ковариации по G
    end 
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    for j=1:nd
        Bcon_fp(j)=(Bcon(j)-SJ(j))*(XBcon(k)-XSJ(k));%функция принадлежности 1
        Bcor_fp(j)=(Bcor(j)-SJ(j))*(XBcor(k)-XSJ(k));%функция принадлежности 2
        Ben_fp(j)=(Ben(j)-SJ(j))*(XBen(k)-XSJ(k));%функция принадлежности 3
        Bhom_fp(j)=(Bhom(j)-SJ(j))*(XBhom(k)-XSJ(k));%функция принадлежности 4
        SumB(j)=Bcon_fp(j)+Bcor_fp(j)+Ben_fp(j)+Bhom_fp(j);%коэф. ковариации по B
    end 

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %RG RG RG RG RG RG RG RG RG RG RG RG RG RG RG RG RG RG RG  
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    for j=1:nd
        RGcon_fp(j)=(RGcon(j)-SJ(j))*(XRGcon(k)-XSJ(k));%функция принадлежности 1
        RGcor_fp(j)=(RGcor(j)-SJ(j))*(XRGcor(k)-XSJ(k));%функция принадлежности 2
        RGen_fp(j)=(RGen(j)-SJ(j))*(XRGen(k)-XSJ(k));%функция принадлежности 3
        RGhom_fp(j)=(RGhom(j)-SJ(j))*(XRGhom(k)-XSJ(k));%функция принадлежности 4
        SumRG(j)=RGcon_fp(j)+RGcor_fp(j)+RGen_fp(j)+RGhom_fp(j);%коэф. ковариации по RG
    end 

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %RB RB RB RB RB RB RB RB RB RB RB RB RB RB RB RB RB RB RB  
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    for j=1:nd
        RBcon_fp(j)=(RBcon(j)-SJ(j))*(XRBcon(k)-XSJ(k));%функция принадлежности 1
        RBcor_fp(j)=(RBcor(j)-SJ(j))*(XRBcor(k)-XSJ(k));%функция принадлежности 2
        RBen_fp(j)=(RBen(j)-SJ(j))*(XRBen(k)-XSJ(k));%функция принадлежности 3
        RBhom_fp(j)=(RBhom(j)-SJ(j))*(XRBhom(k)-XSJ(k));%функция принадлежности 4   
        SumRB(j)=RBcon_fp(j)+RBcor_fp(j)+RBen_fp(j)+RBhom_fp(j);%коэф. ковариации по RB
    end 

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %GB GB GB GB GB GB GB GB GB GB GB GB GB GB GB GB GB GB GB GB GB GB 
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    for j=1:nd 
        GBcon_fp(j)=(GBcon(j)-SJ(j))*(XGBcon(k)-XSJ(k));%функция принадлежности 1
        GBcor_fp(j)=(GBcor(j)-SJ(j))*(XGBcor(k)-XSJ(k));%функция принадлежности 2
        GBen_fp(j)=(GBen(j)-SJ(j))*(XGBen(k)-XSJ(k));%функция принадлежности 3
        GBhom_fp(j)=(GBhom(j)-SJ(j))*(XGBhom(k)-XSJ(k));%функция принадлежности 4  
        SumGB(j)=GBcon_fp(j)+GBcor_fp(j)+GBen_fp(j)+GBhom_fp(j);%коэф. ковариации по GB
    end 
    for j=1:nd
        Sum(j)=SumR(j)+SumG(j)+SumB(j)+SumRG(j)+SumRB(j)+SumGB(j);
        Sum1global(j)=Sum(j)/(sqrt(x_sko(j)*y_sko(k)));
    end
% if ((Sum1(j)>(1+BT)))  
%     Sum1(j)=0;
% else
% if ((Sum1(j)<(1-BT)))      
%      Sum1(j)=0; 
% end     
% end
%end
% SumMax=max(Sum(j));
% Sum_contr=Sum(contr)
% Sum1_contr=Sum1(contr)

% j=1:nd; %функция принадлежности 
% figure
% plot(j,Sum1global(j));
% title('Sum1global');
    Sum1globalmax=max(Sum1global);
    for i=1:nd
        Voting_global(i)=0;
        if (Sum1global(i)== max(Sum1global));   
            Voting_global(i)=1;
        end    
    end
% %end
    VotingGlobalRes=Voting_global%%%
    kb_=0;
    for i=1:nd
        if (Voting_global(i)==1) 
            kb_= kb_+2^i ;
        end
    end  
    kb_in=kb_in;
    kb_out=kb_ ;
    if (kb_in==kb_out)   
        global_result=global_result+1;
    end  
end

GR=global_result;
GR_persent=GR/m*100 

%pause;
close all;
clear;